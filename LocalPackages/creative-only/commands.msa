
*:/jumpstrike [$player=''] = >>>
	if (!has_permission('LolNo.admin')) {
		die();
	}

	proc _doit (@player) {
		@mode = pmode(@player);
		set_pmode(@player, 'SURVIVAL');
		set_phealth(@player, 20);
		set_pvelocity(@player, 0, 10, 0);
		set_timeout(2500, closure(
			set_pmode(@player, 'CREATIVE');
			lightning(ploc(@player), true);
			set_timeout(2500, closure(set_phealth(@player, 20)));
 		));
	}

	if ($player == '') {
		msg(color('light_purple').'Jumping the whole server!');
		foreach (@player in all_players()) {
			_doit(@player);
		}
	} else {
		msg(color('light_purple').'Jumping '.player($player).'!');
		_doit($player);
	}
<<<

/colornames [$color='white'] = >>>
	foreach (@p in all_players()) {
		set_display_name(@p, color($color).@p.color('r'));
	}
<<<

/rainbownames = >>>
	@colors = array(4, 6, 'e', 2, 9); #Rainbow colors
	foreach (@p in all_players()) {
		@name = ''
		for (@i = 0, @i < length(@p), @i++) {
			@letter = @p[@i];
			@name .= color(@colors[@i % array_size(@colors)]) . @letter;
		}
		set_display_name(@p, @name.color('r'));
	}
<<<

/resetnames = >>>
	foreach (@p in all_players()) {
		reset_display_name(@p);
	}
<<<

*:/roll [$faces] [$] = >>>
	if (!has_permission("nerdch.roll")) {
		die(color('red')."No dice");
	}
	if(has_permission("nerdch.roll.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.roll", 300000) || die(color('red')."You have to wait your turn");
	}
	@faces = 6;
	if($faces != '' && is_integral($faces)) {
		@faces = integer($faces);
	}
	broadcast(@prefix.player().' rolled a '.rand(1, @faces + 1))
<<<

*:/flip [$] = >>>
	if(!has_permission("nerdch.flip")) {
		die(color('red')."Flipping is not allowed.");
	}
	if (has_permission("nerdch.flip.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.flip", 300000) || die(color('red')."You have to wait your turn");
	}
	broadcast(@prefix.player().' got '.if(rand(0, 2) == 1, 'heads', 'tails'))
<<<

*:/draw [$] = >>>
	if(!has_permission("nerdch.draw")) {
		die(color('red')."You left your playing cards at home.");
	}
	if(has_permission("nerdch.draw.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.draw", 300000) || die(color('red')."You have to wait your turn");
	}
	@values = array('Ace', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'Jack', 'Queen', 'King');
	@vowels = array(0, 7);
	@suits = array('Spades', 'Clubs', 'Hearts', 'Diamonds');
	@value = rand(0, 13);
	broadcast(@prefix.player().' drew '.if(array_contains(@vowels, @value), 'an ', 'a ').@values[@value].' of '.@suits[rand(0, 4)]);
<<<

*:/pull [$] = >>>
	if(!has_permission("nerdch.pull")) {
		die(color('red')."You ran out of coin tokens.");
	}
	if(has_permission("nerdch.pull.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.pull", 300000) || die(color('red')."You have to wait your turn");
	}
	@symbols = array('7', '\u3374', '\u26c0', '\u2618', '\u260a', '\u265a');
	@num     = length(@symbols)
	msg(@prefix.color('RANDOM').'000');
	set_timeout(3000, closure() {
		@sym1 = @symbols[rand(@num)]
		@sym2 = @symbols[rand(@num)]
		@sym3 = @symbols[rand(@num)]
		broadcast(@prefix.player().' got '.@sym1.@sym2.@sym3);
	});
<<<

/**
 * Roulette wheel
 *
**/
*:/spin [$] = >>>
	if(!has_permission("nerdch.spin")) {
		die(color('red')."Roulette isn't legal in your country");
	}
	if(has_permission("nerdch.spin.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.spin", 300000) || die(color('red')."You have to wait your turn");
	}
	@red = array(0,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		0, 1, 0, 1, 0, 1, 0, 1,
		1, 0, 1, 0, 1, 0, 1, 0, 1, 0,
		0, 1, 0, 1, 0, 1, 0, 1);
	@pocket = rand(length(@red)); /* 0 to 36 roulette wheel */
	msg(@prefix.color('RANDOM').'000');
	set_timeout(3000, closure() {
		if (@pocket == 0) {
			@c = color('DARK_GREEN');
		} else if(@red[@pocket]) {
			@c = color('RED');
		} else {
			@c = color('GRAY');	
		}
		broadcast(@prefix.player().' spun '.@c.@pocket);
	});
<<<

# Magic 8 Ball
*:/Magic8Ball [$] = >>>
	if (!has_permission("nerdch.magic8ball")) {
		die(color('red')."You forgot your Magic 8-Ball. Oh noes!");
	}
	if (has_permission("nerdch.magic8ball.nocooldown")) {
		@prefix = color('GOLD');
	} else {
		@prefix = color('GRAY');
		_checkCooldown("nerdch.magic8ball", 300000) || die(color('red')."Generating entropy . . . Try again later.");
	}

	@i = rand(20);
	@array = array(
                "It is certain",
                "It is decidedly so",
                "Without a doubt",
                "Yes, definitely",
                "You may rely on it",
                "As I see it, yes",
                "Most likely",
                "Outlook good",
                "Yes",
                "Signs point to yes",
                "Reply hazy try again",
                "Ask again later",
                "Better not tell you now",
                "Cannot predict now",
                "Concentrate and ask again",
                "Don't count on it",
                "My reply is no",
                "My sources say no",
                "Outlook not so good",
                "Very doubtful");
	broadcast(concat(@prefix, "[", trim(player()), "'s Magic 8-Ball]: ", color('green'), @array[@i]));
<<<

/rainbowhat [$player] = >>>
	@player = player();
	if ($player != '') {
		@player = player($player);
	}
    if (import('rainbowhat.'.@player) != null) {
		clear_task(import('rainbowhat.'.@player));
		export('rainbowhat.'.@player, null)
        set_pinv(@player, array(103: null))
		die('No more rainbow hat :(');
	}
	msg('Rainbow hat!!!');
	set_pinv(@player, array(103: array(name: 'LEATHER_HELMET')));
	@currentColor = array(0);
	@colors = array(
        array(255, 0, 0),   #red
		array(255, 128, 0), #orange
		array(255, 255, 0), #yellow
		array(0, 255, 0),   #green
		array(0, 0, 255),   #blue
		array(127, 0, 255), #indigo
		array(102, 0, 204)  #violet
	);
	@interval = set_interval(200, closure(
		try(
			if (!ponline(@player) || pinv(@player, 103) == null || pinv(@player, 103)['name'] != 'LEATHER_HELMET') {
				clear_task();
				export('rainbowhat.'.@player, null)
                die('No more rainbow hat :(');
			} else {
				@cindex = @currentColor[0];
				@currentColor[0] = if(@currentColor[0] >= array_size(@colors) - 1, 0, @currentColor[0] + 1);
				@color = @colors[@currentColor[0]];
				set_armor_color(@player, 103, @color);
			}
    		, #catch
    			#kill the task if it shits itself, so there aren't stacktraces
    			clear_task();
    			export('rainbowhat.'.@player, null)
    	)
	));
	export('rainbowhat.'.@player, @interval);
<<<

/policehat [$player] = >>>
    @player = player()
    if($player != '', @player = player($player))
    if(import('policehat.'.@player) != null){
    	clear_task(import('policehat.'.@player))
        export('policehat.'.@player, null)
        set_pinv(@player, array(103: null))
        die('No more policehat hat :(')
    }
    msg('Police hat!!!')
    set_pinv(@player, array(103: array(name: 'LEATHER_HELMET')))
    @currentColor = array(0)
    @colors = array(
        array(255, 0, 0),   #red
        array(0, 0, 255),   #blue
    )
    @interval = set_interval(200, closure(
        try(
            if(!ponline(@player) || pinv(@player, 103) == null || pinv(@player, 103)['name'] != 'LEATHER_HELMET'){
                clear_task()
                export('policehat.'.@player, null)
                die('No more policehat hat :(')
            } else {
                @pitch = 1
                if(@currentColor[0] == 0){
                    @pitch = 5
                }
                play_sound(ploc(@player), array(sound: 'ENTITY_EXPERIENCE_ORB_PICKUP', pitch: @pitch))
                @cindex = @currentColor[0]
                @currentColor[0] = if(@currentColor[0] >= array_size(@colors) - 1, 0, @currentColor[0] + 1)
                @color = @colors[@currentColor[0]]
                set_armor_color(@player, 103, @color)
            }
            , #catch
                #kill the task if it shits itself, so there aren't stacktraces
                clear_task()
                export('policehat.'.@player, null)
        )
    ));
    export('policehat.'.@player, @interval)
<<<


/*
*:/me $ = >>>
	run('/bukkit:me ' . $)
<<<
*/

*:/slap $player = >>>
	_assertperm('admin');
	@pi   = 3.14159265359;
	@v    = 9.0;
	@theta = rand()*@pi/2.0;
	@phi   = rand()*@pi*2.0;
	@vel_x = @v*sin(@theta)*cos(@phi);
	@vel_z = @v*sin(@theta)*sin(@phi);
	@vel_y = @v*cos(@theta);
	set_pvelocity($player, @vel_x, @vel_y, @vel_z);
	msg(color('GOLD').$player.' has been slapped!');
	tmsg($player, color('GOLD').'You have been slapped!');
<<<

*:/poke $playerName = >>>
	@lastTime = import('lastpoke.'.player());
	@time = time();
	if (!is_null(@lastTime) && (@time - (1000 * 60 * 5)) < @lastTime) {
		msg(color('RED').'You can poke someone again 5 minutes after poking someone.');
		die();
	}

	@player = null;
	try (@player = player($playerName), msg(color('RED').'Player is not online.') die());
	tmsg(@player, color('GOLD').'You have been poked!');
	msg(color('GOLD').@player.' has been poked!');
	export('lastpoke.'.player(), @time);
<<<

/euthanize [$] = /butcher $

# Fly, even in survival mode
*:/fly [$] = >>>
	if (!has_permission("nerdch.fly")) {
		die(color('RED') . "You do not have permission to use /fly.");
	}
	if ($ != '') {
		die(color('RED') . "USAGE: /fly");
	}
	set_pflight(true);
	set_pflying(true);
	msg(color('GREEN') . "You are now high as a kite.")
<<<

# Alias for //stack
/stacc [$] = >>>
	run('//stack ' .$)
<<<

