#
# Utilities
#

/each $ = >>>
        assign(@args, parse_args($))
        foreach(all_players(), @p, g(
                run(replace($, '^', @p))
        ))
<<<

/kickall $ = >>>
	foreach(all_players(), @p, g(
		pkick(@p, $)
	))
<<<

/kickforrestart = call_alias('/kickall Server restarting.')

/ra = /reloadaliases

#
# Commands for unprivileged users
#

*:/compass = >>>
    assign(@l, mod(floor(divide(add(pfacing()[0], 22.5), 45)), 8))
    if(array_contains(array(3,4,5), @l), assign(@o, concat(@o, 'N')))
    if(array_contains(array(7,0,1), @l), assign(@o, concat(@o, 'S')))
    if(array_contains(array(1,2,3), @l), assign(@o, concat(@o, 'W')))
    if(array_contains(array(5,6,7), @l), assign(@o, concat(@o, 'E')))
    msg(concat(color('gray'), 'Bearing: ', @o, ' (', mod(add(integer(pfacing()[0]),180),360), ' degrees)'))
<<<

*:/coords = >>>
    assign(@l, ploc())
    assign(@w, array('world': 'overworld', 'world_nether': 'nether', 'world_the_end': 'end'))
    msg(concat(color('gray'), 'You are in the ', @w[@l[3]], '.'))
    msg(concat(color('gray'), 'X: ', integer(@l[0]), ' (+East <-> -West)'))
    msg(concat(color('gray'), 'Y: ', integer(@l[1]), ' (+Up <-> -Down)'))
    msg(concat(color('gray'), 'Z: ', integer(@l[2]), ' (+South <-> -North)'))
    call_alias('/compass')
    msg(concat(color('gray'), 'Pitch: ', multiply(integer(pfacing()[1]), -1), ' degrees'))
<<<

*:/yp = msg('Yaw:' pfacing()[0] '-' 'Pitch:' pfacing()[1])

*:/helpreq $ = /modreq $
*:/rules = msg('Rules can be found at nerd.nu/rules and/or on the noticeboards at spawn.')
*:/ping = msg(concat(color('gray'), 'Pong!'))

*:/modlist = >>>
	assign(@mods, array())
        foreach(all_players(), @p,
		if (is_null(get_value('list.hide.'.to_lower(@p))) && has_permission(@p, 'nerdch.level.mod')) {
			array_push(@mods, @p)
		}
	)
    msg(concat(color('dark_aqua'), 'Online Mods: ', color('white'), array_implode(@mods, ', ')))
<<<


*:/lag off = >>>
	msg(color('gray').'Lag disabled.')
<<<
*:/lag on = >>>
	set_timeout(10000, closure(
		msg(color('gray').'Lag enabled.')
	))
<<<

*:/fun off = >>>
	msg(color('gray').'Fun disabled.')
<<<
*:/fun on = >>>
	msg(color('red').'ERROR: '.color('gray').'Failed to enable fun. Fun not found.')
<<<

*:'/list-all' = /list 'all'

*:/me drinks = >>>
	set_peffect(player(), 9, 1, 30)
	run('/me drinks')
<<<

# By popular request . . .
'//stacc' [$] = >>>
        if ($ == '') {
                run('//stack');
        } else {
                run('//stack ' . $);
        }
<<<

/**
 * @command
 */
*:/cs [$] = >>>
    run('/NerdClanChat:cs ' . $);
<<<

*:/lwc info = call_alias('/cinfo')
*:/lwc -info = call_alias('/cinfo')
*:/lwc owners = call_alias('/cinfo')
*:/lwc owner = call_alias('/cinfo')
*:/lwc i = call_alias('/cinfo')
*:/lwc -i = call_alias('/cinfo')
*:/lwc -o = call_alias('/cinfo')
*:/lwc o = call_alias('/cinfo')

nerdch.level.admin:/mobtower $mob [$height=5] = >>>
	assign(@lastRider, null)
	foreach(range($height), @i,
		assign(@lastSpawned, spawn_entity($mob, 1, pcursor())[0])
		if(@lastRider != null){
			set_entity_rider(@lastRider, @lastSpawned)
		}
		assign(@lastRider, @lastSpawned)
	)
<<<

nerdch.level.admin:/mobride $mob $player = >>>
	set_ploc($player, ploc())
	set_entity_rider(spawn_entity($mob)[0], pinfo($player, 13))
<<<

nerdch.level.admin:'/mobride-r' $mob $radius = >>>
	foreach(entities_in_radius(ploc(), $radius, 'PLAYER'), @playerId,
		if (pinfo(player(), 13) != @playerId) {
			set_entity_rider(spawn_entity($mob)[0], @playerId)
		}
	)
<<<

/**
 * @command
 * @tabcompleter _signtextTabcompletion
 */
*:/signtext [$line] [$] = >>>
	if($line == ''){
		msg(color('red').'Usage: /signtext $line $text')
		if (has_permission('nerdch.level.restricted')) {
			msg('Supported color codes:')
			msg(colorize('&0&&0 &1&&1 &2&&2 &3&&3 &4&&4 &5&&5 &6&&6 &7&&7'))
			msg(colorize('&8&&8 &9&&9 &a&&a &b&&b &c&&c &d&&d &e&&e &f&&f'))
			msg('Typing && twice gives a single, literal &')
		}
		die()
	}
	if($line < 1 || $line > 4){
		die(color('red').'The line number must be between 1 and 4!')
	}
	if(is_sign_at(pcursor())){
		if (!has_permission('nerdch.level.restricted')) {
			@regions = sk_regions_at(pcursor());
			if (length(@regions) > 0) {
				# Not modmode, and sign is in at least one region. Check if they are an owner of all regions the sign is in.
				foreach (@reg in @regions) {
					@owners = sk_region_owners(@reg, pworld());
					if (!array_contains(@owners['players'], puuid())) {
						die(color('RED').'You are not an owner of ' . @reg);
					}
				}
			} else {
				# No regions. Make sure the player can build at the location.
				if (!sk_can_build(player(), pcursor())) {
					die(color('RED').'You need to be able to build to use /signtext');
				}
			}
		}
		@array = get_sign_text(pcursor())
		console(player() . ' changed sign text AT: '.pcursor().' FROM: ' . color('WHITE') . @array . ' TO: ' .  $)
		@array[$line - 1] = if(has_permission('nerdch.level.restricted'), colorize($), strip_colors($));
		set_sign_text(pcursor(), @array)
	} else {
		die('You aren\'t looking at a sign!')
	}
<<<


/fw $colors [$fade='white'] [$type='ball_large'] [$qty=5] = >>>
	_assertperm('admin')
	foreach(range($qty), @i,
		launch_firework(pcursor(),
			array('colors': $colors, 'strength': 2, 'flicker': true, 'type': $type, 'fade': $fade)
		)
	)
<<<

'/player-detect' = >>>
	_assertperm('admin')
	@array = array()
	foreach(players_in_radius(15), @p,
		if(@p != player()){
			array_push(@array, @p)
		}
	)
	msg(array_implode(@array, ', '))
<<<

/lolno = /lolno 'help'

*:/whereami [$] = >>>
	msg(import('sharedata.source'));
<<<

# Used from console only.

*:/performance = >>>
	_assertperm('admin')
	run_cmd(/tps)
	run_cmd(/lag)
	console('Online: '.array_size(all_players()))
<<<

# By popular request again . .

*:/bacc = /back
