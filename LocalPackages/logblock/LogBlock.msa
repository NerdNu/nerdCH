*:'/logblock' [$] = >>>
<<<

# Queries Using LogBlock Syntax
# =============================
# To prevent huge results sets from crashing a server, require that queries ask for a player name.

*:'/lb' [$] = >>>
	_assertperm('mod', 0);
	@args = split(' ',$);

	# If the args contain a whitelisted command/param, run and exit.
	@whitelist = array('help','commands','params','permissions','next','prev','page','tp','me','tool','toolblock','hide','sum','sel','selection','area','chestaccess');
	foreach (@allowed in @whitelist) {
		if (array_contains(@args, @allowed)) {
			run(/lb $);
			die();
		}
	}

    if ($ == "redo") {
        die(color('RED')."Syntax: /lbredo <player> [since]");
    }

	# No whitelist entries, therefore require 'player'.
    if (array_contains(@args, 'player')) {
		run(/lb $);
	} else {
		die(color('RED').'You must specify a player.');
	}
<<<


#trace
*:'/trace-r' $player $r = >>>
	_assertperm('mod', 0)
	@radius = $r
	if (! is_integral(@radius) || @radius < 1) {
		# Negative radius rolls back EVERYWHERE.
		die(color('RED').'The radius must be a positive integer.')
	}
	@days = _lb_retention_days()
	run(concat('/lb player ', $player, ' area ', @radius, ' sum blocks since ', @days, ' days'))

	# Delay the /lookup so it follows the /lb output.
	set_timeout(1000, closure(run_cmd('/lookup ' . $player)))
<<<

*:/trace $player = >>>
	_assertperm('mod', 0)
	@days = _lb_retention_days()
	run(concat('/lb player ', $player, ' area 10000 sum blocks since ', @days, ' days'))

	# Delay the /lookup so it follows the /lb output.
	set_timeout(1000, closure(run_cmd('/lookup ' . $player)))
<<<

#rollback
*:'/lbrb-r' $p $r = >>>
	_assertperm('mod', 0)
	@radius = $r
	if (! is_integral(@radius) || @radius < 1) {
		# Negative radius rolls back EVERYWHERE.
		die(color('RED').'The radius must be a positive integer.')
	}
	@days = _lb_retention_days()
	run(concat('/lb rollback player ', $p, ' area ', @radius, ' since ', @days, ' days'))
<<<
*:/lbrb $p = >>>
	_assertperm('mod', 0)
	@days = _lb_retention_days()
	run(concat('/lb rollback player ', $p, ' since ', @days, ' days'))
<<<

#redo
*:'/lbredo-r' $player $radius [$since] = >>>
	_assertperm('mod', 0)
	@radius = $radius
	if (! is_integral(@radius) || @radius < 1) {
		# Negative radius rolls back EVERYWHERE.
		die(color('RED').'The radius must be a positive integer.')
	}
	@days = if (is_integral($since), $since, _lb_retention_days())
	run(concat('/lb redo player ', $player, ' area ', @radius, ' since ', @days, ' days'))
<<<
*:/lbredo $player [$since] = >>>
	_assertperm('mod', 0)
	@days = if (is_integral($since), $since, _lb_retention_days())
	run(concat('/lb redo player ', $player, ' area 10000 since ', @days, ' days'))
<<<

#topminer
*:/topminer $time = >>>
	_assertperm('mod', 0)
	run('/lb time '.$time.' block diamond_ore destroyed sum players')
<<<

*:/xraytrace $player = >>>
	run(concat('/lb player ', $player, ' area 10000 sum blocks time 7 days'))
<<<
